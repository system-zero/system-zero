#!/bin/env La
# NOTE that such scripts can be loaded into the interpreter, since '# is a
# comment it skips the first she-bang line, and so they can be checked by
# valgrind and debugged with gdb.

import ("sys")

include ("argparse")

var argparse = New Argparse (8, 0, "Packman option[s] package")
argparse.add ("install", 0, "install", "install package", BooleanType, ARG_LITERAL)
argparse.add ("update_repo", 0, "update-repo", "update repository", BooleanType, ARG_LITERAL) 
argparse.add ("spec_info", 0, "spec-info", "spec information", BooleanType, ARG_LITERAL)
argparse.add ("settings", 0, "settings", "general settings", BooleanType, ARG_LITERAL)
argparse.add ("list_specs", 0, "list-specs", "list available specs", BooleanType, ARG_LITERAL)
argparse.add ("bootstrap", 0, "bootstrap", "bootstrap", BooleanType, ARG_LITERAL)
argparse.add ("force", 'f', "force", "force", BooleanType, 0)
argparse.add ("help", 'h', "help", "show this message", BooleanType, 0)

ifnot ok is argparse.process (__argv, 1) then exit (1)

if argparse.exit is true then exit (0)

var update_repo = argparse.results.update_repo
var install     = argparse.results.install
var spec_info   = argparse.results.spec_info
var settings    = argparse.results.settings
var list_specs  = argparse.results.list_specs
var force       = argparse.results.force
var bootstrap   = argparse.results.bootstrap

var package = null

if bootstrap is true then install = true

include ("packman")

if false is bootstrap {
  package = func {
    ifnot (argparse.argc) {
      if ((settings is false and list_specs is false) or spec_info is true) {
        println (stderr, "No package has been specified")
        exit (1)
      }

      return null
    }

    return argparse.argv[0]
  } ()
}

ifnot (install + update_repo + spec_info + settings + list_specs) {
  println ("no action has been specified in the command line" +
    ifnot null is package then " for " + package orelse "")
  # it doesn't really need this, i leave it here for historical reasons
  # as it has been used during the if as expressions development and as
  # a demonstration, but to exhibit future bugs. In fact while writting
  # this comment, it will throw an error if you put the closed paren in
  # the next line 
  exit (1)
}

var p = New Packman ()

var tmpdir = "TMPDIR": sys_get ()
if null is tmpdir then tmpdir = "/tmp"

p.set.builddir (tmpdir)

var retval = notok

if bootstrap is true {
  p.new.spec ("clone_libc")
  return notok if notok is p.build ()
  p.new.spec ("curl")
  return if notok is p.build () then notok orelse ok
}

if list_specs is true {
  p.list.specs ()
  exit (0)
}

if (spec_info is true) {
  var spec = p.new.spec (package)
  spec.info (p)
  exit (0)
}

if (settings is true) {
  ifnot null is package then p.new.spec (package)

  p.info ()
  exit (0)
}

if (install is true) {
  p.new.spec (package)

  if (update_repo is true) {
    retval = p.update_repo ()
    if retval is notok then
      if argparse.results.force then exit (retval)
  }

  exit (p.build ())
}

if update_repo is true {
  p.new.spec (package)
  exit (p.update_repo ())
}

exit (retval)
