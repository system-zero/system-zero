var prog = "File.rename"

import ("file")
loadfile ("argparse")

var argparse = New Argparse (6, 0, prog + " [option[s]] source destination")
argparse.add ("force", 'f', "force", "do not prompt before overwriting", BooleanType, 0)
argparse.add ("backup", 'b', "backup", "make a backup of each existing destination file", BooleanType, 0) 
argparse.add ("recursive", 'R', "recursive", "copy recursively", BooleanType, 0)
argparse.add ("interactive", 'i', "interactive", "prompt before overwrite", BooleanType, 0)
argparse.add ("verbose", 'v', "verbose=", "be verbose", IntegerType, ARG_VALUE_OPTIONAL|ARG_VALUE_APPEND)
argparse.add ("help", 'h', "help", "show this message", BooleanType, 0)

ifnot ok is argparse.process (__argv, 1) then exit (1)

if argparse.exit is true then exit (0)

var qualif = {
  force       : argparse.results.force
  backup      : argparse.results.backup
  recursive   : argparse.results.recursive
  interactive : argparse.results.interactive
  verbose     : argparse.results.verbose: ifnot x then 1 orelse x + 1 end
}

if (argparse.argc < 2) {
  println (stderr, "${prog}: missing operands")
  exit (1)
}

if (argparse.argc > 2) {
  println (stderr, "${prog}: extra operands")
  exit (1)
}

var source      = argparse.argv[0]     
var destination = argparse.argv[1]

var retval = source: file_rename (destination; qualif)

exit (if retval is notok then 1 orelse 0)
