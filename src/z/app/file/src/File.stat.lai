var prog = "File.stat"

import ("os")
import ("std")
import ("file")
import ("time")

if (__argc is 1) {
  println (stderr, "${%s, prog}: missing operand")
  exit (1)
}

var file = __argv[1]
var st = file:file_lstat ()

if (null is st) {
  println (stderr, "${%s, prog}: ${%s, errno:errno_string()}")
  exit (1)
}

var oct = st.st_mode: file_mode_to_octal_string ()

var type = st.st_mode: file_type_to_string ()
var dev_x = format ("${%x, st.st_dev}")
String.advance (dev_x, 2);

var acct = st.st_atime: time_local ()
var acc = "Access: %Y-%m-%d %H:%M:%S": time_format (acct)
var modt = st.st_mtime: time_local ()
var mod = "Modify: %Y-%m-%d %H:%M:%S": time_format (modt)
var cht = st.st_ctime: time_local ()
var ch = "Change: %Y-%m-%d %H:%M:%S": time_format (cht)

println ("  File: ${%s, file}")
println ("  Size: ${st.st_size}     Blocks: ${st.st_blocks}    I/O Block: ${st.st_blksize}  ${%s, type}")
println ("Device: ${%s, dev_x}h/${st.st_dev}d    Inode: ${st.st_ino}     Links: ${st.st_nlink}")
print   ("Access: (${%s, oct}/${%s, st.st_mode:file_mode_to_string ()})")
println ("   Uid: ( ${st.st_uid}/ ${%s, st.st_uid:getpwname()})  Gid: ( ${st.st_gid}/ ${%s, st.st_gid: getgrname ()})")
println ("${%s, acc}\n${%s, mod}\n${%s, ch}")

exit (0)
