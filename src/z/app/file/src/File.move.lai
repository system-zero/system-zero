import ("path")
import ("file")
import ("dir")
include ("argparse")

var prog = __file__: path_basename ()

var argparse = New Argparse (6, 0, prog + " [option[s]] source[s] destination")
argparse.add ("force", 'f', "force", "do not prompt before overwriting", BooleanType, 0)
argparse.add ("backup", 'b', "backup", "make a backup of each existing destination file", BooleanType, 0) 
argparse.add ("interactive", 'i', "interactive", "prompt before overwrite", BooleanType, 0)
argparse.add ("verbose", 'v', "verbose", "be verbose", BooleanType, 0)
argparse.add ("help", 'h', "help", "show this message", BooleanType, 0)

ifnot ok is argparse.process (__argv, 1) then exit (1)

if argparse.exit is true then exit (0)

var qualif = {
  force       : argparse.results.force
  backup      : argparse.results.backup
  interactive : argparse.results.interactive
  verbose     : argparse.results.verbose: ifnot x then 1 orelse x + 1 end
}

if (argparse.argc < 2) {
  println (stderr, "${prog}: missing operands")
  exit (1)
}

var destination = argparse.argv[argparse.argc - 1]

var is_directory = dir_is_directory

if (argparse.argc > 2) {
  ifnot (destination: is_directory ()) {
    println (stderr, "${destination} is not a directory")
    exit (0)
  }
}

var exitval = 0

var retval = ok

var move_to = file_rename

for (var i = 0; i < argparse.argc - 1; i += 1) {
  retval = argparse.argv[i]: move_to (destination; qualif)
  exitval = if retval is notok then 1 orelse exitval
}

exit (exitval)
